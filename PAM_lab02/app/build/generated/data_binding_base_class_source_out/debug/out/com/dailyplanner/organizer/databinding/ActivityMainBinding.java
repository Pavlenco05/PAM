// Generated by view binder compiler. Do not edit!
package com.dailyplanner.organizer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CalendarView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.dailyplanner.organizer.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton btnAllEvents;

  @NonNull
  public final MaterialButton btnDeleteEvent;

  @NonNull
  public final MaterialButton btnThisWeek;

  @NonNull
  public final MaterialButton btnToday;

  @NonNull
  public final MaterialButton btnTomorrow;

  @NonNull
  public final CalendarView calendarView;

  @NonNull
  public final RecyclerView eventsRecyclerView;

  @NonNull
  public final FloatingActionButton fabAddEvent;

  @NonNull
  public final TextInputEditText searchEditText;

  @NonNull
  public final Toolbar toolbar;

  private ActivityMainBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton btnAllEvents, @NonNull MaterialButton btnDeleteEvent,
      @NonNull MaterialButton btnThisWeek, @NonNull MaterialButton btnToday,
      @NonNull MaterialButton btnTomorrow, @NonNull CalendarView calendarView,
      @NonNull RecyclerView eventsRecyclerView, @NonNull FloatingActionButton fabAddEvent,
      @NonNull TextInputEditText searchEditText, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.btnAllEvents = btnAllEvents;
    this.btnDeleteEvent = btnDeleteEvent;
    this.btnThisWeek = btnThisWeek;
    this.btnToday = btnToday;
    this.btnTomorrow = btnTomorrow;
    this.calendarView = calendarView;
    this.eventsRecyclerView = eventsRecyclerView;
    this.fabAddEvent = fabAddEvent;
    this.searchEditText = searchEditText;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAllEvents;
      MaterialButton btnAllEvents = ViewBindings.findChildViewById(rootView, id);
      if (btnAllEvents == null) {
        break missingId;
      }

      id = R.id.btnDeleteEvent;
      MaterialButton btnDeleteEvent = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteEvent == null) {
        break missingId;
      }

      id = R.id.btnThisWeek;
      MaterialButton btnThisWeek = ViewBindings.findChildViewById(rootView, id);
      if (btnThisWeek == null) {
        break missingId;
      }

      id = R.id.btnToday;
      MaterialButton btnToday = ViewBindings.findChildViewById(rootView, id);
      if (btnToday == null) {
        break missingId;
      }

      id = R.id.btnTomorrow;
      MaterialButton btnTomorrow = ViewBindings.findChildViewById(rootView, id);
      if (btnTomorrow == null) {
        break missingId;
      }

      id = R.id.calendarView;
      CalendarView calendarView = ViewBindings.findChildViewById(rootView, id);
      if (calendarView == null) {
        break missingId;
      }

      id = R.id.eventsRecyclerView;
      RecyclerView eventsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (eventsRecyclerView == null) {
        break missingId;
      }

      id = R.id.fabAddEvent;
      FloatingActionButton fabAddEvent = ViewBindings.findChildViewById(rootView, id);
      if (fabAddEvent == null) {
        break missingId;
      }

      id = R.id.searchEditText;
      TextInputEditText searchEditText = ViewBindings.findChildViewById(rootView, id);
      if (searchEditText == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityMainBinding((CoordinatorLayout) rootView, btnAllEvents, btnDeleteEvent,
          btnThisWeek, btnToday, btnTomorrow, calendarView, eventsRecyclerView, fabAddEvent,
          searchEditText, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
